en:
  oracles:
    exception:
      staff: >-
        Expected value exception, but received %{actual}, which caused an exception
        while parsing: %{exception}
      student: >-
        Dodona does not understand this exception. Report this error to the teacher.
      status: "Invalid exception"
    exitcode:
      status:
        invalid: "Invalid exitcode %{exit_code}."
        message: "Can't parse %{exit_code} as exitcode."
        wrong: "Wrong exitcode"
    nothing:
      runtime: "Runtime error"
      unexpected: "Unexpected output"
    programmed:
      student:
        default: >-
          Something went wrong when evaluating the solution.
          Report this to the teacher.
      result: "This result of the programmed evaluation is invalid:"
      stdout: "This is produced on stdout:"
      stderr: "This is produced on stderr:"
    specific:
      student:
        default: >-
          Something went wrong when evaluating the solution.
          Report this to the teacher.
      missing:
        status: "Missing output."
        message: "Output is missing here."
      status: "Error by evaluating the result."
      staff: >-
        Received invalid output for specific evaluation: %{actual}.
        Either the test suite is invalid, the evaluation code has a bug or the student
        is trying to cheat: %{e}
    text:
      file:
        unexpected:
          status: "Unexpected output."
          message: "Doesn't expect output for channel, but found: %{actual}."
        not-found: "File not found."
    value:
      missing: "Missing return value."
      datatype:
        wrong: "Return value is having the wrong datatype."
        message: "Expected value of type %{expected}, but was type %{actual}."
  judge:
    compilation:
      exitcode: "Exitcode %{exitcode}."
    core:
      unsupported:
        language: "Unsupported programming language"
      compilation: "Compilation"
      invalid:
        source-code: "Invalid source code"
      initialization: "Error while initializing the code:"
    evaluation:
      time-limit: "Time limit exceeded"
      memory-limit: "Memory limit exceeded"
      not-executed: "These test(s) were not executed"
      missing: "Missing result"
      files:
        zero: "No files"
        one: "File: %{files}"
        many: "Files: %{files}"
      dynamic: "Dynamic"
      hidden_expected: "\U0001f937 You must find the correct solution by your own."
    programmed:
      student: >-
        Something went wrong while evaluating the solution.
        Please contact the teacher
      unsupported: "Evaluation in %{lang} isn't supported"
      unknown:
        compilation: "Unknown compilation error"
      produced:
        stderr: "The evaluation code produced the following output on stderr:"
        stdout: "The evaluation code produced the following output on stdout:"
      failed: "The program language specific evaluation failed."
      invalid: "The result of the programmed evaluation is invalid:"
  languages:
    config:
      unknown:
        compilation: "Unknown compilation error"
    generator:
      missing:
        input: "No input found."
    linter:
      more-info: "more information"
      not-found: "%{linter} not found!"
    python:
      linter:
        crashed: "Pylint crashed"
        output: "Pylint produced bad output."
    javascript:
      runtime:
        invalid:
          exception: "%{actual_type} is not an instance of Error (or a subclass)."
      linter:
        timeout: "ESLint exceeded time limit"
        memory: "ESLint exceeded memory limit"
        output: "ESLint produced bad output."
    haskell:
      linter:
        timeout: "HLint exceeded time limit"
        memory: "HLint exceeded memory limit"
        output: "HLint produced bad output."
    kotlin:
      linter:
        timeout: "KTLint exceeded time limit"
        memory: "KTLint exceeded memory limit"
        output: "KTLint produced bad output."
    java:
      linter:
        timeout: "Checkstyle exceeded time limit"
        memory: "Checkstyle exceeded memory limit"
        output: "Checkstyle produced bad output."
    c:
      linter:
        timeout: "CPPCheck exceeded time limit"
        memory: "CPPCheck exceeded memory limit"
        output: "CPPCheck produced bad output."
    bash:
      linter:
        timeout: "ShellCheck exceeded time limit"
        memory: "ShellCheck exceeded memory limit"
        output: "ShellCheck produced bad output."
  timings:
    parallel: "In parallel execution, the cumulative execution times can be greater than the total execution time."
    title: "Stats"
    testplan: "Reading test suite"
    dsl: "Parse YAML test suite"
    json: "Parse JSON test suite"
    bundle: "Create bundle information"
    analyse:
      supported: "Check if test suite is supported by the programming language"
      features: "Analyse features"
    prepare:
      output: "Preparing feedback table"
      results: "Preparing results"
    linter: "Running linter"
    generation: "Generate testcode"
    submission:
      modify: "Modify submission"
    generate:
      templates: "Generate testcode from templates"
    compilation:
      pre: "Batch compilation"
      individual: "Individual compilation"
      batch:
        done: "Adding feedback from batch compilation"
    run:
      execution: "Running a run"
      testcode: "Running test executables"
    dependencies:
      copy: "Copy dependencies"
    evaluate:
      text: "Evaluating text results/full file with built-in evaluator"
      results: "Evaluating results"
      builtin:
        file: "Evaluating file line-by-line with built-in evaluator"
        value: "Evaluating return values with built-in evaluator"
        exception: "Evaluating exceptions with built-in evaluator"
      programmed: "Evaluating results with programmed evaluator"
    total: "Total execution time"
    parse:
      expression: "Parse expressions and statements"
      return: "Parse YAML return values"
      return-raw: "Parse return-raw values"
  types:
    singular:
      integer: "integer"
      real: "real number"
      char: "character"
      text: "string"
      boolean: "boolean"
      nothing: "nothing"
      undefined: "nothing"
      int8: "8-bit integer"
      uint8: "8-bit natural number"
      int16: "16-bit integer"
      uint16: "16-bit natural number"
      int32: "32-bit integer"
      uint32: "32-bit natural number"
      int64: "64-bit integer"
      uint64: "64-bit natural number"
      bigint: "big integer"
      single_precision: "single precision floating point number"
      double_precision: "double precision floating point number"
      fixed_precision: "fixed precision number"  
      any: "any"
      list: "list"
      tuple: "tuple"
      array: "array"
      map: "map"
      sequence: "sequence"
      set: "set"
    plural:
      integer: "integers"
      real: "real numbers"
      char: "characters"
      text: "strings"
      boolean: "booleans"
      nothing: "nothing"
      undefined: "nothing"
      int8: "8-bit integers"
      uint8: "8-bit natural numbers"
      int16: "16-bit integers"
      uint16: "16-bit natural numbers"
      int32: "32-bit integers"
      uint32: "32-bit natural numbers"
      int64: "64-bit integers"
      uint64: "64-bit natural numbers"
      bigint: "big integers"
      single_precision: "single precision floating point numbers"
      double_precision: "double precision floating point numbers"
      fixed_precision: "fixed precision numbers"
      any: "any"
      list: "lists"
      tuple: "tuples"
      array: "arrays"
      map: "maps"
      sequence: "sequences"
      set: "sets"

