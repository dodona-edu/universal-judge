{
  "$id" : "tested:dsl:schema7",
  "$schema" : "http://json-schema.org/draft-07/schema#",
  "title" : "TESTed-DSL",
  "oneOf" : [
    {
      "$ref" : "#/definitions/_rootObject"
    },
    {
      "$ref" : "#/definitions/_tabList"
    },
    {
      "$ref" : "#/definitions/_unitList"
    }
  ],
  "definitions" : {
    "_rootObject" : {
      "type" : "object",
      "oneOf" : [
        {
          "required" : [
            "tabs"
          ],
          "not" : {
            "required" : [
              "units"
            ]
          }
        },
        {
          "required" : [
            "units"
          ],
          "not" : {
            "required" : [
              "tabs"
            ]
          }
        }
      ],
      "properties" : {
        "files" : {
          "description" : "A list of files used in the test suite.",
          "oneOf" : [
            {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/file"
              }
            },
            {
              "type" : "natural_language",
              "additionalProperties": {
                "type" : "array",
                "items" : {
                  "$ref" : "#/definitions/file"
                }
              }
            }
          ]
        },
        "namespace" : {
          "type" : "string",
          "description" : "Namespace of the submitted solution, in `snake_case`"
        },
        "tabs" : {
          "$ref" : "#/definitions/_tabList"
        },
        "units" : {
          "$ref" : "#/definitions/_unitList"
        },
        "language" : {
          "description" : "Indicate that all code is in a specific language.",
          "oneOf" : [
            {
              "$ref" : "#/definitions/programmingLanguage"
            },
            {
              "const" : "tested"
            }
          ]
        },
        "translation" : {
          "type" : "object",
          "description": "Define translations in the global scope."
        },
        "definitions" : {
          "description" : "Define hashes to use elsewhere.",
          "type" : "object"
        },
        "config": {
          "$ref": "#/definitions/inheritableConfigObject"
        }
      }
    },
    "_tabList" : {
      "type" : "array",
      "minItems" : 1,
      "items" : {
        "$ref" : "#/definitions/tab"
      }
    },
    "_unitList" : {
      "type" : "array",
      "minItems" : 1,
      "items" : {
        "$ref" : "#/definitions/unit"
      }
    },
    "tab" : {
      "type" : "object",
      "description" : "A tab in the test suite.",
      "required" : [
        "tab"
      ],
      "properties" : {
        "files" : {
          "description" : "A list of files used in the test suite.",
          "oneOf" : [
            {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/file"
              }
            },
            {
              "type" : "natural_language",
              "additionalProperties": {
                "type" : "array",
                "items" : {
                  "$ref" : "#/definitions/file"
                }
              }
            }
          ]
        },
        "hidden" : {
          "type" : "boolean",
          "description" : "Defines if the unit/tab is hidden for the student or not"
        },
        "tab" : {
          "oneOf" : [
            {
              "type" : "string"
            },
            {
              "type" : "natural_language",
              "additionalProperties": {
                "type" : "string"
              }
            }
          ],
          "description" : "The name of this tab."
        },
        "translation" : {
          "type" : "object",
          "description": "Define translations in the tab scope."
        },
        "definitions" : {
          "description" : "Define objects to use elsewhere.",
          "type" : "object"
        },
        "config": {
          "$ref": "#/definitions/inheritableConfigObject"
        }
      },
      "oneOf" : [
        {
          "required" : [
            "contexts"
          ],
          "properties" : {
            "contexts" : {
              "$ref" : "#/definitions/_contextList"
            }
          }
        },
        {
          "required" : [
            "testcases"
          ],
          "properties" : {
            "testcases" : {
              "$ref" : "#/definitions/_testcaseList"
            }
          }
        }
      ]
    },
    "unit" : {
      "type" : "object",
      "description" : "A unit in the test suite.",
      "required" : [
        "unit"
      ],
      "properties" : {
        "files" : {
          "description" : "A list of files used in the test suite.",
          "oneOf" : [
            {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/file"
              }
            },
            {
              "type" : "natural_language",
              "additionalProperties": {
                "type" : "array",
                "items" : {
                  "$ref" : "#/definitions/file"
                }
              }
            }
          ]
        },
        "hidden" : {
          "type" : "boolean",
          "description" : "Defines if the unit/tab is hidden for the student or not"
        },
        "unit" : {
          "anyOf" : [
            {
              "type" : "string"
            },
            {
              "type" : "natural_language",
              "additionalProperties": {
                "type" : "string"
              }
            }
          ],
          "description" : "The name of this tab."
        },
        "translation" : {
          "type" : "object",
          "description": "Define translations in the unit scope."
        },
        "definitions" : {
          "description" : "Define objects to use elsewhere.",
          "type" : "object"
        },
        "config": {
          "$ref": "#/definitions/inheritableConfigObject"
        }
      },
      "oneOf" : [
        {
          "required" : [
            "cases"
          ],
          "properties" : {
            "cases" : {
              "$ref" : "#/definitions/_caseList"
            }
          }
        },
        {
          "required" : [
            "scripts"
          ],
          "properties" : {
            "scripts" : {
              "$ref" : "#/definitions/_scriptList"
            }
          }
        }
      ]
    },
    "_contextList" : {
      "type" : "array",
      "minItems" : 1,
      "items" : {
        "$ref" : "#/definitions/context"
      }
    },
    "_caseList" : {
      "type" : "array",
      "minItems" : 1,
      "items" : {
        "$ref" : "#/definitions/case"
      }
    },
    "_testcaseList" : {
      "type" : "array",
      "minItems" : 1,
      "items" : {
        "$ref" : "#/definitions/testcase"
      }
    },
    "_scriptList" : {
      "type" : "array",
      "minItems" : 1,
      "items" : {
        "$ref" : "#/definitions/script"
      }
    },
    "context" : {
      "type" : "object",
      "description" : "A set of testcase in the same context.",
      "required" : [
        "testcases"
      ],
      "properties" : {
        "files" : {
          "description" : "A list of files used in the test suite.",
          "oneOf" : [
            {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/file"
              }
            },
            {
              "type" : "natural_language",
              "additionalProperties": {
                "type" : "array",
                "items" : {
                  "$ref" : "#/definitions/file"
                }
              }
            }
          ]
        },
        "translation" : {
          "type" : "object",
          "description": "Define translations in the context scope."
        },
        "context" : {
          "type" : "string",
          "description" : "Description of this context."
        },
        "testcases" : {
          "$ref" : "#/definitions/_testcaseList"
        }
      }
    },
    "case" : {
      "type" : "object",
      "description" : "A test case.",
      "required" : [
        "script"
      ],
      "properties" : {
        "files" : {
          "description" : "A list of files used in the test suite.",
          "oneOf" : [
            {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/file"
              }
            },
            {
              "type" : "natural_language",
              "additionalProperties": {
                "type" : "array",
                "items" : {
                  "$ref" : "#/definitions/file"
                }
              }
            }
          ]
        },
        "translation" : {
          "type" : "object",
          "description": "Define translations in the case scope."
        },
        "context" : {
          "type" : "string",
          "description" : "Description of this context."
        },
        "script" : {
          "$ref" : "#/definitions/_scriptList"
        }
      }
    },
    "testcase" : {
      "type" : "object",
      "description" : "An individual test for a statement or expression",
      "additionalProperties" : false,
      "properties" : {
        "description" : {
          "oneOf": [
            {
              "$ref" : "#/definitions/message"
            },
            {
              "type" : "natural_language",
              "additionalProperties": {
                "$ref" : "#/definitions/message"
              }
            }
          ]
        },
        "stdin" : {
          "description" : "Stdin for this context",
          "oneOf": [
            {
              "type" : [
                "string",
                "number",
                "integer",
                "boolean"
              ]
            },
            {
              "type" : "natural_language",
              "additionalProperties": {
                "type" : [
                  "string",
                  "number",
                  "integer",
                  "boolean"
                ]
              }
            }
          ]
        },
        "arguments" : {
          "type" : "array",
          "description" : "Array of program call arguments",
          "items" : {
            "type" : [
              "string",
              "number",
              "integer",
              "boolean"
            ]
          }
        },
        "statement" : {
          "description" : "The statement to evaluate.",
          "$ref" : "#/definitions/expressionOrStatement"
        },
        "expression" : {
          "description" : "The expression to evaluate.",
          "$ref" : "#/definitions/expressionOrStatement"
        },
        "exception" : {
          "description" : "Expected exception message",
          "oneOf" : [
            {
              "type" : "string",
              "description" : "Message of the expected exception."
            },
            {
              "type" : "object",
              "required" : [
                "types"
              ],
              "properties" : {
                "message" : {
                  "type" : "string",
                  "description" : "Message of the expected exception."
                },
                "types" : {
                  "minProperties" : 1,
                  "description" : "Language mapping of expected exception types.",
                  "type" : "object",
                  "propertyNames" : {
                    "$ref" : "#/definitions/programmingLanguage"
                  },
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          ]
        },
        "files" : {
          "description" : "A list of files used in the test suite.",
          "oneOf" : [
            {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/file"
              }
            },
            {
              "type" : "natural_language",
              "additionalProperties": {
                "type" : "array",
                "items" : {
                  "$ref" : "#/definitions/file"
                }
              }
            }
          ]
        },
        "return" : {
          "description" : "Expected return value",
          "$ref" : "#/definitions/returnOutputChannel"
        },
        "stderr" : {
          "description" : "Expected output at stderr",
          "$ref" : "#/definitions/textOutputChannel"
        },
        "stdout" : {
          "description" : "Expected output at stdout",
          "$ref" : "#/definitions/textOutputChannel"
        },
        "file": {
          "description" : "Expected files generated by the submission.",
          "$ref" : "#/definitions/fileOutputChannel"
        },
        "exit_code" : {
          "type" : "integer",
          "description" : "Expected exit code for the run"
        }
      }
    },
    "script" : {
      "type" : "object",
      "description" : "An individual test (script) for a statement or expression",
      "properties" : {
        "description" : {
          "$ref" : "#/definitions/message"
        },
        "stdin" : {
          "description" : "Stdin for this context",
          "type" : [
            "string",
            "number",
            "integer",
            "boolean"
          ]
        },
        "arguments" : {
          "type" : "array",
          "description" : "Array of program call arguments",
          "items" : {
            "type" : [
              "string",
              "number",
              "integer",
              "boolean"
            ]
          }
        },
        "statement" : {
          "description" : "The statement to evaluate.",
          "$ref" : "#/definitions/expressionOrStatement"
        },
        "expression" : {
          "description" : "The expression to evaluate.",
          "$ref" : "#/definitions/expressionOrStatement"
        },
        "exception" : {
          "description" : "Expected exception message",
          "oneOf" : [
            {
              "type" : "string",
              "description" : "Message of the expected exception."
            },
            {
              "type" : "object",
              "required" : [
                "types"
              ],
              "properties" : {
                "message" : {
                  "type" : "string",
                  "description" : "Message of the expected exception."
                },
                "types" : {
                  "minProperties" : 1,
                  "description" : "Language mapping of expected exception types.",
                  "type" : "object",
                  "propertyNames" : {
                    "$ref" : "#/definitions/programmingLanguage"
                  },
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          ]
        },
        "files" : {
          "description" : "A list of files used in the test suite.",
          "oneOf" : [
            {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/file"
              }
            },
            {
              "type" : "natural_language",
              "additionalProperties": {
                "type" : "array",
                "items" : {
                  "$ref" : "#/definitions/file"
                }
              }
            }
          ]
        },
        "return" : {
          "description" : "Expected return value",
          "$ref" : "#/definitions/returnOutputChannel"
        },
        "stderr" : {
          "description" : "Expected output at stderr",
          "$ref" : "#/definitions/textOutputChannel"
        },
        "stdout" : {
          "description" : "Expected output at stdout",
          "$ref" : "#/definitions/textOutputChannel"
        },
        "exit_code" : {
          "type" : "integer",
          "description" : "Expected exit code for the run"
        }
      }
    },
    "expressionOrStatement" : {
      "oneOf" : [
        {
          "type" : "string",
          "format" : "tested-dsl-expression",
          "description" : "A statement of expression in Python-like syntax as YAML string."
        },
        {
          "description" : "Programming-language-specific statement or expression.",
          "type" : "object",
          "minProperties" : 1,
          "propertyNames" : {
            "$ref" : "#/definitions/programmingLanguage"
          },
          "items" : {
            "type" : "string",
            "description" : "A language-specific literal, which will be used verbatim."
          }
        }
      ]
    },
    "yamlValueOrPythonExpression" : {
      "oneOf" : [
        {
          "$ref" : "#/definitions/yamlValue"
        },
        {
          "type" : "expression",
          "format" : "tested-dsl-expression",
          "description" : "An expression in Python-syntax."
        }
      ]
    },
    "file" : {
      "type" : "object",
      "description" : "A file used in the test suite.",
      "required" : [
        "name",
        "url"
      ],
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "The filename, including the file extension."
        },
        "url" : {
          "type" : "string",
          "format" : "uri",
          "description" : "Relative path to the file in the `description` folder of an exercise."
        }
      }
    },
    "textOutputChannel" : {
      "anyOf" : [
        {
          "$ref" : "#/definitions/textualType"
        },
        {
          "type" : "object",
          "description" : "Built-in oracle for text values.",
          "required" : [
            "data"
          ],
          "properties" : {
            "data" : {
              "$ref" : "#/definitions/textualType"
            },
            "oracle" : {
              "const" : "builtin"
            },
            "config" : {
              "$ref" : "#/definitions/textConfigurationOptions"
            }
          }
        },
        {
          "type" : "object",
          "description" : "Custom oracle for text values.",
          "required" : [
            "oracle",
            "file",
            "data"
          ],
          "properties" : {
            "data" : {
              "$ref" : "#/definitions/textualType"
            },
            "oracle" : {
              "const" : "custom_check"
            },
            "file" : {
              "type" : "string",
              "description" : "The path to the file containing the custom check function."
            },
            "name" : {
              "type" : "string",
              "description" : "The name of the custom check function.",
              "default" : "evaluate"
            },
            "arguments" : {
              "type" : "array",
              "description" : "List of YAML (or tagged expression) values to use as arguments to the function.",
              "items" : {
                "$ref" : "#/definitions/yamlValueOrPythonExpression"
              }
            },
            "languages": {
              "type" : "array",
              "description" : "Which programming languages are supported by this oracle.",
              "items" : {
                "$ref" : "#/definitions/programmingLanguage"
              }
            }
          }
        }
      ]
    },
    "fileOutputChannel": {
      "anyOf" : [
        {
          "type" : "object",
          "description" : "Built-in oracle for files.",
          "required" : [
            "content",
            "location"
          ],
          "properties" : {
            "content" : {
              "type" : "string",
              "description" : "Path to the file containing the expected contents, relative to the evaluation directory."
            },
            "location" : {
              "type" : "string",
              "description" : "Path to where the file generated by the submission should go."
            },
            "oracle" : {
              "const" : "builtin"
            },
            "config" : {
              "$ref" : "#/definitions/fileConfigurationOptions"
            }
          }
        },
        {
          "type" : "object",
          "description" : "Custom oracle for file values.",
          "required" : [
            "oracle",
            "content",
            "location",
            "file"
          ],
          "properties" : {
            "oracle" : {
              "const" : "custom_check"
            },
            "content" : {
              "type" : "string",
              "description" : "Path to the file containing the expected contents, relative to the evaluation directory."
            },
            "location" : {
              "type" : "string",
              "description" : "Path to where the file generated by the submission should go."
            },
            "file" : {
              "type" : "string",
              "description" : "The path to the file containing the custom check function."
            },
            "name" : {
              "type" : "string",
              "description" : "The name of the custom check function.",
              "default" : "evaluate"
            },
            "arguments" : {
              "type" : "array",
              "description" : "List of YAML (or tagged expression) values to use as arguments to the function.",
              "items" : {
                "$ref" : "#/definitions/yamlValueOrPythonExpression"
              }
            },
            "languages": {
              "type" : "array",
              "description" : "Which programming languages are supported by this oracle.",
              "items" : {
                "$ref" : "#/definitions/programmingLanguage"
              }
            }
          }
        }
      ]
    },
    "returnOutputChannel" : {
      "oneOf" : [
        {
          "$ref" : "#/definitions/yamlValueOrPythonExpression"
        },
        {
          "type" : "oracle",
          "additionalProperties" : false,
          "required" : [
            "value"
          ],
          "properties" : {
            "oracle" : {
              "const" : "builtin"
            },
            "value" : {
              "$ref" : "#/definitions/yamlValueOrPythonExpression"
            }
          }
        },
        {
          "type" : "oracle",
          "additionalProperties" : false,
          "required" : [
            "value",
            "oracle",
            "file"
          ],
          "properties" : {
            "oracle" : {
              "const" : "custom_check"
            },
            "value" : {
              "$ref" : "#/definitions/yamlValueOrPythonExpression"
            },
            "file" : {
              "type" : "string",
              "description" : "The path to the file containing the custom check function."
            },
            "name" : {
              "type" : "string",
              "description" : "The name of the custom check function.",
              "default" : "evaluate"
            },
            "arguments" : {
              "type" : "array",
              "description" : "List of YAML (or tagged expression) values to use as arguments to the function.",
              "items" : {
                "$ref" : "#/definitions/yamlValueOrPythonExpression"
              }
            },
            "languages": {
              "type" : "array",
              "description" : "Which programming languages are supported by this oracle.",
              "items" : {
                "$ref" : "#/definitions/programmingLanguage"
              }
            }
          }
        },
        {
          "type" : "oracle",
          "additionalProperties" : false,
          "required" : [
            "oracle",
            "functions"
          ],
          "properties" : {
            "oracle" : {
              "const" : "specific_check"
            },
            "functions" : {
              "minProperties" : 1,
              "description" : "Language mapping of oracle functions.",
              "type" : "object",
              "propertyNames" : {
                "$ref" : "#/definitions/programmingLanguage"
              },
              "items" : {
                "type" : "object",
                "required" : [
                  "file"
                ],
                "properties" : {
                  "file" : {
                    "type" : "string",
                    "description" : "The path to the file containing the custom check function."
                  },
                  "name" : {
                    "type" : "string",
                    "description" : "The name of the custom check function.",
                    "default" : "evaluate"
                  }
                }
              }
            },
            "arguments" : {
              "minProperties" : 1,
              "description" : "Language mapping of oracle arguments.",
              "type" : "object",
              "propertyNames" : {
                "$ref" : "#/definitions/programmingLanguage"
              },
              "items" : {
                "type" : "array",
                "description" : "List of YAML (or tagged expression) values to use as arguments to the function.",
                "items" : {
                  "type" : "string",
                  "description" : "A language-specific literal, which will be used verbatim."
                }
              }
            },
            "value" : {
              "$ref" : "#/definitions/yamlValueOrPythonExpression"
            }
          }
        }
      ]
    },
    "programmingLanguage" : {
      "type" : "string",
      "description" : "One of the programming languages supported by TESTed.",
      "enum" : [
        "bash",
        "c",
        "haskell",
        "java",
        "javascript",
        "typescript",
        "kotlin",
        "python",
        "runhaskell",
        "csharp"
      ]
    },
    "message" : {
      "oneOf" : [
        {
          "type" : "string",
          "description" : "A simple message to display."
        },
        {
          "type" : "object",
          "required" : [
            "description"
          ],
          "properties" : {
            "description" : {
              "oneOf": [
                {
                  "type" : "natural_language",
                  "additionalProperties": {
                    "type" : "string"
                  }
                },
                {
                  "type" : "string"
                }
              ],
              "type" : "string",
              "description" : "The message to display."
            },
            "format" : {
              "type" : "string",
              "default" : "text",
              "description" : "The format of the message, either a programming language, 'text' or 'html'."
            }
          }
        }
      ]
    },
    "textConfigurationOptions" : {
      "type" : "object",
      "description" : "Configuration properties for textual comparison and to configure if the expected value should be hidden or not",
      "minProperties" : 1,
      "properties" : {
        "applyRounding" : {
          "description" : "Apply rounding when comparing as float",
          "type" : "boolean"
        },
        "caseInsensitive" : {
          "description" : "Ignore case when comparing strings",
          "type" : "boolean"
        },
        "ignoreWhitespace" : {
          "description" : "Ignore trailing whitespace",
          "type" : "boolean"
        },
        "normalizeTrailingNewlines" : {
          "description" : "Normalize trailing newlines",
          "type" : "boolean"
        },
        "roundTo" : {
          "description" : "The number of decimals to round at, when applying the rounding on floats",
          "type" : "integer"
        },
        "tryFloatingPoint" : {
          "description" : "Try comparing text as floating point numbers",
          "type" : "boolean"
        },
        "hideExpected" : {
          "description" : "Hide the expected value in feedback (default: false), not recommended to use!",
          "type" : "boolean"
        }
      }
    },
    "fileConfigurationOptions": {
      "anyOf" : [
        {
          "$ref" : "#/definitions/textConfigurationOptions"
        },
        {
          "type" : "object",
          "properties" : {
            "mode": {
              "type" : "string",
              "enum" : ["full", "line"],
              "default" : "full"
            }
          }
        }
      ]
    },
    "textualType" : {
      "description" : "Simple textual value, converted to string.",
      "type" : [
        "string",
        "number",
        "integer",
        "boolean"
      ]
    },
    "yamlValue" : {
      "description" : "A value represented as YAML.",
      "not" : {
        "type" : [
          "oracle",
          "expression"
        ]
      }
    },
    "inheritableConfigObject": {
      "type": "object",
      "properties" : {
        "stdout": {
          "$ref" : "#/definitions/textConfigurationOptions"
        },
        "stderr": {
          "$ref" : "#/definitions/textConfigurationOptions"
        },
        "file": {
          "$ref" : "#/definitions/fileConfigurationOptions"
        }
      }
    }
  }
}
